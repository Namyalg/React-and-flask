{"ast":null,"code":"var _jsxFileName = \"/home/namyalg/REACT/React-and-flask/src/components/Case.js\";\nimport React, { Component } from 'react';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Case extends Component {\n  constructor() {\n    super();\n\n    this.setCase = event => {\n      this.setState({\n        case: event.target.value\n      }); //console.log(this.state.case)\n    };\n\n    this.mystyle = {\n      rows: 10,\n      cols: 500,\n      padding: \"10px\",\n      fontFamily: \"Arial\"\n    };\n    this.state = {\n      case: '',\n      ispred: false,\n      class: ''\n    };\n  }\n\n  showCase() {\n    console.log(this.state.case);\n  }\n\n  async predict() {\n    console.log(\"In the predictions \");\n    console.log(this.state.case);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        case: this.state.case\n      })\n    };\n    const data = await fetch('http://localhost:5000/foo', requestOptions);\n    const response = await data.json();\n    console.log(response.message);\n    this.setState({\n      ispred: true,\n      class: response.message\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"case\",\n      children: [\"Enter the case content :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: this.mystyle,\n        value: this.state.case,\n        onChange: this.setCase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.showCase(),\n        children: \"Show case content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.predict(),\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.state.ispred ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"The case prediction belongs to class \", this.state.class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Case;","map":{"version":3,"sources":["/home/namyalg/REACT/React-and-flask/src/components/Case.js"],"names":["React","Component","Case","constructor","setCase","event","setState","case","target","value","mystyle","rows","cols","padding","fontFamily","state","ispred","class","showCase","console","log","predict","requestOptions","method","headers","body","JSON","stringify","data","fetch","response","json","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACzBE,EAAAA,WAAW,GAAE;AACT;;AADS,SAgCbC,OAhCa,GAgCHC,KAAK,IAAI;AACf,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAGF,KAAK,CAACG,MAAN,CAAaC;AADV,OAAd,EADe,CAIf;AACH,KArCY;;AAAA,SAsCTC,OAtCS,GAsCC;AACVC,MAAAA,IAAI,EAAG,EADG;AAEVC,MAAAA,IAAI,EAAG,GAFG;AAGVC,MAAAA,OAAO,EAAE,MAHC;AAIVC,MAAAA,UAAU,EAAE;AAJF,KAtCD;AAET,SAAKC,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAG,EADE;AAETS,MAAAA,MAAM,EAAG,KAFA;AAGTC,MAAAA,KAAK,EAAG;AAHC,KAAb;AAKH;;AAEDC,EAAAA,QAAQ,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWR,IAAvB;AACH;;AACY,QAAPc,OAAO,GAAE;AACbF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWR,IAAvB;AACF,UAAMe,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFU;AAKjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEpB,QAAAA,IAAI,EAAE,KAAKQ,KAAL,CAAWR;AAAnB,OAAf;AALW,KAAvB;AAQI,UAAMqB,IAAI,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8BP,cAA9B,CAAxB;AACA,UAAMQ,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYU,QAAQ,CAACE,OAArB;AACA,SAAK1B,QAAL,CAAc;AACZU,MAAAA,MAAM,EAAG,IADG;AAEZC,MAAAA,KAAK,EAAGa,QAAQ,CAACE;AAFL,KAAd;AAID;;AAeHC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,0DAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAW,QAAA,KAAK,EAAE,KAAKvB,OAAvB;AAAgC,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWR,IAAlD;AAAwD,QAAA,QAAQ,EAAE,KAAKH;AAAvE;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKc,QAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKG,OAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,EAWK,KAAKN,KAAL,CAAWC,MAAX,gBAAoB;AAAA,+BAAK;AAAA,8DAA0C,KAAKD,KAAL,CAAWE,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAApB,GAAkG,IAXvG;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA9DwB;;AAgE7B,eAAef,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport './Header.css'\n\nclass Case extends Component {\n    constructor(){\n        super();\n        this.state = {\n            case : '',\n            ispred : false,\n            class : ''\n        }\n    }\n\n    showCase(){\n        console.log(this.state.case);\n    }\n    async predict(){\n      console.log(\"In the predictions \")\n      console.log(this.state.case);\n    const requestOptions = {\n        method: 'POST',\n        headers: { \n            'Content-Type': 'application/json'    \n          },\n          body: JSON.stringify({ case: this.state.case})\n        };\n        \n        const data = await fetch('http://localhost:5000/foo', requestOptions)   \n        const response = await data.json();\n        console.log(response.message);\n        this.setState({\n          ispred : true,\n          class : response.message\n        })\n      }\n  \n    setCase = event => {\n        this.setState({\n            case : event.target.value\n        })\n        //console.log(this.state.case)\n    }\n        mystyle = {\n        rows : 10,\n        cols : 500,\n        padding: \"10px\",\n        fontFamily: \"Arial\"\n      };\n    \n    render() {\n        return (\n            <div className=\"case\">\n                Enter the case content : \n                <br></br>\n                <br></br>\n                <textarea  style={this.mystyle} value={this.state.case} onChange={this.setCase}></textarea>\n                <br></br>\n                <br></br>\n                <button onClick={() => this.showCase()}>Show case content</button>\n                <br></br>\n                <br></br>\n                <button onClick={() => this.predict()}>Predict</button>\n                {this.state.ispred ? <div><h2>The case prediction belongs to class {this.state.class}</h2></div> : null}\n            </div>\n        )\n    }\n}\nexport default Case;"]},"metadata":{},"sourceType":"module"}